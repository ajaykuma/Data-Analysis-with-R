#<- is the assignment operator
x <- 1
x
print(x)
msg <- "Hello"
print(msg)
y <- 5 ##nothing printed
y ##auto-printing occurs
print(y) ##explicit printing
#using operator to create integer sequences
#integer sequence of length 20
x <- 10:30
x
class(x)
#Numbers (numeric objects ie double precision real numbers)
#numbers such as 1 or 2 etc (thought at integers ad represented as numeric objects behind the scenes such as 1.00 or 2.00)
a <- 1 ##numeric object
ai <- 1L ##integer object
#Inf: represents Infinity
1/Inf
a
typeof(a)
typeof(ai)
v1 <- c(1,2,3,4,5)
v1
class(v1)
typeof(v1)
v2 <- c('hello','world')
v2
print(v2)
print(paste(v2)
)
print(paste0(v2))
class(v1)
class(v2)
#Creating Vectors
#The c() function can be used to create vectors of objects by concatenating things together.
x <- c(0.5, 0.6) ## numeric
x
x <- c(TRUE, FALSE) ## logical
x
x <- c(T, F) ## logical
x
x<- c("a", "b", "c") ## character
x
x <- 9:29 ## integer
x
x <- c(1+0i, 2+4i) ## complex
x
#use the vector() function to initialize vectors.
x <- vector("numeric", length = 10)
x
#create a vector of numbers
numbers = c(1,2,3,4,5,6)
numbers
print(numbers)
#create a vector of letters
ltrs = c('a','b','c','d')
print(ltrs)
#concatenating the both above
mixed_vec = c(numbers,ltrs)
#vector mixed_vec has coerced the numbers to character
print(mixed_vec)
#vector mixed_vec has coerced the numbers to character
print(mixed_vec)
class(mixed_vec)
### One dimensional objects
# Integer vector
num = 1:10
class(num)
# Numeric vector, it has a float, 10.5
num = c(1:10, 10.5)
class(num)
# Character vector
ltrs = letters[1:10]
class(ltrs)
num
ltrs
# Factor vector
fac = as.factor(ltrs)
class(fac)
fac
class(num)
num
# Character vector
ltrs = letters[1:10]
class(ltrs)
ltrs
#Mixing objects
#There are occasions when different classes of R objects get mixed together. Sometimes this happens
#by accident but it can also happen on purpose.
y <- c(1.7, "a") ## character
y
class(y)
y <- c(TRUE, 2) ## numeric
class(y)
y
y <- c("a", TRUE) ## character
y
#Explicit coercion
#Objects can be explicitly coerced from one class to another using the as.* functions
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
#If R cannot figure out how to coerce an object ,this can result in NAs being produced.
x <- c("a","b","c")
class(x)
as.numeric(x)
as.logical(x)
as.complex(x)
x
#Attributes
#R objects have attributes(metadata for object)
#Examples of R object attributes ( names,dimnames,dimensions[matrices,arrays],class[integer,numeric],
#length,other user-defined attributes/metadata)
x <- 1
x
#Not all R objects contain attributes, in which case the attributes() function returns NULL.
attributes(x)
